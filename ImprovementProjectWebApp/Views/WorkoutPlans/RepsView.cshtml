@model ImprovementProjectWebApp.Models.PartExerciseViewModels.RepsPlanIdVM
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

<div>
    <div class="clearfix"></div>
    <label>Reps:</label>
    <input  class="form-control" value="@Model.WorkoutPlanId" id="workPlanId"  hidden="hidden"/>
    <br />
    <div class="">
        @for(int i=0; i< Model.Set; i++)
        {

            <div style="margin-bottom:5px;">

                <div class="col-lg-6 RepsDiv" style="padding:0;">
                    <input class="form-control RepsInput" value="0" />
                </div>
                <div class="col-lg-6">
                    <button type="button" class="btn btn-primary" onclick="setRepsNumber(this)">5</button>
                    <button type="button" class="btn btn-primary" onclick="setRepsNumber(this)">10</button>
                    <button type="button" class="btn btn-primary" onclick="setRepsNumber(this)">+1</button>
                    <button type="button" class="btn btn-primary" onclick="setRepsNumber(this)">+5</button>
                    <button type="button" class="btn btn-danger" onclick="setRepsNumber(this)">0</button>
                </div>
                <div class="clearfix"></div>
            </div>


        }
    </div>

    <div class="clearfix"></div>
    <button type="button" class="btn btn-primary col-lg-offset-6 " id="CreateReps" onclick="createRepsClick()">Create Reps</button>

</div>

<script>
    function setRepsNumber(a) {
        var btnValue = $(a).text();
        var repsInputValue = parseInt($(a).parent().prev().children().val());
        switch (btnValue) {
            case "5":
                $(a).parent().prev().children().val(5);
                break;
            case "10":
                $(a).parent().prev().children().val(10);
                break;
            case "+1":
                $(a).parent().prev().children().val(repsInputValue + 1);
                break;
            case "+5":
                $(a).parent().prev().children().val(repsInputValue + 5);
                break;
            case "0":
                $(a).parent().prev().children().val(0);
                break;
            default:
                alert("Some Mistake Here");
                break;

        }

    }
    function createRepsClick() {
        //=================================
        //style hide and show

        //=================================
        var repsArray = [];
        var a = $('.RepsInput');
        var l = $('.RepsInput').length;
        //salert(l);
        var allValue = true;
        for (var i = 0; i < l; i++) {
            var eachReps = a[i];
            if (eachReps.value != '0' || isNaN(eachReps)) {
                repsArray.push(eachReps.value);
            }            
            else {
                allValue == false;                
            }
        }
        if (allValue) {
            $.ajax({
                url: '@Url.Action("AddReps", "WorkoutPlans")',
                type: "POST",
                data: {
                    "repsArray": repsArray,
                    "workPlanId": $("#workPlanId").val()
                },
                success: function (data) {
                    alert(data);
                    @*var url = "Url.Action("../ WorkoutPlans", "AddWorkoutPlanView", new { PlanName = @Model.PlanName, UserId = @Model.UserId })";*@
                    window.location.href = "../Details/" + $("#workPlanId").val();
                },
                error: function () { alert('List workout plan error'); }
            });
        }
        else {
            alert("please make sure fill in all the field. Or make sure all the value are numbers.");

        }
        //alert(a);
    }
</script>




